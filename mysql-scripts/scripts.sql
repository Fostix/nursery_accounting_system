-- MySQL Script generated by MySQL Workbench
-- Вт 24 янв 2023 12:24:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema friends_of_man
-- -----------------------------------------------------
-- 7. В подключенном MySQL репозитории создать базу данных “Друзья
-- человека”:
DROP SCHEMA IF EXISTS `friends_of_man` ;

-- -----------------------------------------------------
-- Schema friends_of_man
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `friends_of_man` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema friends_of_man
-- -----------------------------------------------------
USE `friends_of_man` ;

-- -----------------------------------------------------
-- Table `friends_of_man`.`pet_commands`
-- -----------------------------------------------------
-- 8. Создать таблицы с иерархией из диаграммы в БД:
DROP TABLE IF EXISTS `friends_of_man`.`pet_commands` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`pet_commands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `command` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`pet_knows_commands`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`pet_knows_commands` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`pet_knows_commands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_pet` INT NOT NULL,
  `id_commands` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `pet_knows_commands_fk0` (`id_commands` ASC) VISIBLE,
  CONSTRAINT `pet_knows_commands_fk0`
    FOREIGN KEY (`id_commands`)
    REFERENCES `friends_of_man`.`pet_commands` (`id`));

CREATE INDEX pet_knows_commands_fk1 ON pet_knows_commands (id_pet);

-- -----------------------------------------------------
-- Table `friends_of_man`.`animal_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`animal_type` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`animal_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`hamsters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`hamsters` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`hamsters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `hamsters_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `hamsters_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `hamsters_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`cats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`cats` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`cats` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `cats_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `cats_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `cats_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`dogs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`dogs` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`dogs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `dogs_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `dogs_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `dogs_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`horses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`horses` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`horses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `horses_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `horses_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `horses_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`camels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`camels` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`camels` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `camels_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `camels_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `camels_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- -----------------------------------------------------
-- Table `friends_of_man`.`donkeys`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friends_of_man`.`donkeys` ;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`donkeys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_command` INT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `donkeys_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `donkeys_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `donkeys_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));


-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- 9. Заполнить низкоуровневые таблицы именами(животных), командами
-- которые они выполняют и датами рождения:
INSERT INTO pet_commands (command)
VALUES
('GO'),
('STOP'),
('RUN_AWAY'),
('COME_UP'),
('LIE'),
('JUMP'),
('TRUP'),
('STAND_UP');

INSERT INTO animal_type (type)
VALUES
('Pet'),
('Pack_animal');

-- feel cats:
-- 1:
INSERT INTO cats (id_command, id_animal_type, date_of_birth, name)
VALUE
(1, 1, '2013-09-25 14:26:22', 'Axel');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 6);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(1, 8);

-- 2:
INSERT INTO cats (id_command, id_animal_type, date_of_birth, name)
VALUE
(2, 1, '2021-03-06 12:19:19', 'Sasha');



-- 3:

INSERT INTO cats (id_command, id_animal_type, date_of_birth, name)
VALUE
(3, 1, '2017-03-08 23:58:56', 'Hardy');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 6);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(3, 8);

-- 4:

INSERT INTO cats (id_command, id_animal_type, date_of_birth, name)
VALUE
(4, 1, '2021-03-06 22:33:03', 'Sox');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(4, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(4, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(4, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(4, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(4, 5);

-- feel dogs:
-- 5:

INSERT INTO dogs (id_command, id_animal_type, date_of_birth, name)
VALUE
(5, 1, '2012-12-12 15:46:56', 'Lucky');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(5, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(5, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(5, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(5, 4);

-- 6:
INSERT INTO dogs (id_command, id_animal_type, date_of_birth, name)
VALUE
(6, 1, '2021-10-14 17:59:00', 'Jazmie');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(6, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(6, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(6, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(6, 4);

-- 7:
INSERT INTO dogs (id_command, id_animal_type, date_of_birth, name)
VALUE
(7, 1, '2016-10-24 07:01:05', 'Poochie');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 6);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(7, 8);

-- feels hamsters:
-- 8:

INSERT INTO hamsters (id_command, id_animal_type, date_of_birth, name)
VALUE
(8, 1, '2021-01-17 20:09:44', 'Skye');

-- 9:

INSERT INTO hamsters (id_command, id_animal_type, date_of_birth, name)
VALUE
(9, 1, '2018-10-07 13:50:04', 'Bo');

-- 10:

INSERT INTO hamsters (id_command, id_animal_type, date_of_birth, name)
VALUE
(10, 1, '2020-04-09 15:18:47', 'Waldo');

-- 11:

INSERT INTO hamsters (id_command, id_animal_type, date_of_birth, name)
VALUE
(11, 1, '2022-10-20 08:23:44', 'Ivy');

-- 12:

INSERT INTO hamsters (id_command, id_animal_type, date_of_birth, name)
VALUE
(12, 1, '2020-7-29 19:45:42', 'Bj');

-- feel horses:
-- 13:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(13, 2, '2015-03-11 04:25:01', 'Benji');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(13, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(13, 7);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(13, 8);

-- 14:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(14, 2, '2017-07-26 07:49:22', 'Higgins');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 6);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 7);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(14, 8);

-- 15:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(15, 2, '2013-07-11 18:42:37', 'Mitch');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 3);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 6);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 7);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(15, 8);

-- feel camels:
-- 16:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(16, 2, '2021-01-05 05:46:02', 'Molly');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(16, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(16, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(16, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(16, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(16, 8);

-- 17:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(17, 2, '2019-09-20 12:11:13', 'Jelly');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(17, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(17, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(17, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(17, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(17, 8);

-- 18:

INSERT INTO horses (id_command, id_animal_type, date_of_birth, name)
VALUE
(18, 2, '2017-06-11 03:18:43', 'Budda');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(18, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(18, 2);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(18, 4);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(18, 5);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(18, 8);

-- feel donkeys:
-- 19:

INSERT INTO donkeys (id_command, id_animal_type, date_of_birth, name)
VALUE
(19, 2, '2016-12-29 03:20:48', 'Klaus');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(19, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(19, 2);

-- 20:

INSERT INTO donkeys (id_command, id_animal_type, date_of_birth, name)
VALUE
(20, 2, '2021-06-11 03:18:43', 'Kosmo');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(20, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(20, 2);

-- 21:

INSERT INTO donkeys (id_command, id_animal_type, date_of_birth, name)
VALUE
(21, 2, '2017-04-04 05:43:55', 'Yogi');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(21, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(21, 2);
-- 22:

INSERT INTO donkeys (id_command, id_animal_type, date_of_birth, name)
VALUE
(22, 2, '2021-10-15 14:38:02', 'Tyler');

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(22, 1);

INSERT INTO pet_knows_commands (id_pet, id_commands)
VALUE
(22, 2);

-- 10. Удалив из таблицы верблюдов, т.к. верблюдов решили перевезти в другой питомник на зимовку. 
-- Объединить таблицы лошади, и ослы в одну таблицу:

DROP TABLE camels;

CREATE TABLE IF NOT EXISTS `friends_of_man`.`horses_and_donkeys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  PRIMARY KEY (`id`),
  INDEX `horses_and_donkeys_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `horses_and_donkeys_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `horses_and_donkeys_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));

INSERT INTO horses_and_donkeys (id_animal_type, date_of_birth, name)
  SELECT id_animal_type, date_of_birth, name FROM horses
   UNION
  SELECT id_animal_type, date_of_birth, name FROM donkeys;

-- 11. Создать новую таблицу “молодые животные” в которую попадут все
-- животные старше 1 года, но младше 3 лет и в отдельном столбце с точностью
-- до месяца подсчитать возраст животных в новой таблице:

CREATE TABLE IF NOT EXISTS `friends_of_man`.`young_animals` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_animal_type` INT NOT NULL,
  `date_of_birth` DATETIME,
  `name` VARCHAR(45),
  `age` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `young_animals_fk1` (`id_animal_type` ASC) VISIBLE,
  CONSTRAINT `young_animals_fk0`
    FOREIGN KEY (`id`)
    REFERENCES `friends_of_man`.`pet_knows_commands` (`id_pet`),
  CONSTRAINT `young_animals_fk1`
    FOREIGN KEY (`id_animal_type`)
    REFERENCES `friends_of_man`.`animal_type` (`id`));
    
INSERT INTO young_animals (id_animal_type, date_of_birth, name, age)
  SELECT c.id_animal_type, c.date_of_birth, c.name, TIMESTAMPDIFF(YEAR,date_of_birth,CURDATE()) AS age
  FROM cats c
  WHERE (NOW() - INTERVAL 1 YEAR) > date_of_birth 
  AND (NOW() - INTERVAL 3 YEAR) < date_of_birth
  UNION
  SELECT d.id_animal_type, d.date_of_birth, d.name, TIMESTAMPDIFF(YEAR,date_of_birth,CURDATE()) AS age
  FROM dogs d
  WHERE (NOW() - INTERVAL 1 YEAR) > date_of_birth 
  AND (NOW() - INTERVAL 3 YEAR) < date_of_birth
  UNION
  SELECT h.id_animal_type, h.date_of_birth, h.name, TIMESTAMPDIFF(YEAR,date_of_birth,CURDATE()) AS age
  FROM hamsters h
  WHERE (NOW() - INTERVAL 1 YEAR) > date_of_birth 
  AND (NOW() - INTERVAL 3 YEAR) < date_of_birth
  UNION
  SELECT had.id_animal_type, had.date_of_birth, had.name, TIMESTAMPDIFF(YEAR,date_of_birth,CURDATE()) AS age
  FROM horses_and_donkeys had
  WHERE (NOW() - INTERVAL 1 YEAR) > date_of_birth 
  AND (NOW() - INTERVAL 3 YEAR) < date_of_birth;

-- 12. Объединить все таблицы в одну, при этом сохраняя поля, указывающие на
-- прошлую принадлежность к старым таблицам.

CREATE TABLE all_table_join
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM hamsters LEFT JOIN dogs ON hamsters.id = dogs.id
              LEFT JOIN cats ON hamsters.id = cats.id
              LEFT JOIN donkeys ON hamsters.id = donkeys.id
              LEFT JOIN horses ON hamsters.id = horses.id
              LEFT JOIN animal_type ON hamsters.id = animal_type.id
              LEFT JOIN horses_and_donkeys ON hamsters.id = horses_and_donkeys.id
              LEFT JOIN pet_commands ON hamsters.id = pet_commands.id
              LEFT JOIN pet_knows_commands ON hamsters.id = pet_knows_commands.id
              LEFT JOIN young_animals ON hamsters.id = young_animals.id
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM dogs LEFT JOIN hamsters ON dogs.id = hamsters.id
          LEFT JOIN cats ON dogs.id = cats.id
          LEFT JOIN donkeys ON dogs.id = donkeys.id
          LEFT JOIN horses ON dogs.id = horses.id
          LEFT JOIN animal_type ON dogs.id = animal_type.id
          LEFT JOIN horses_and_donkeys ON dogs.id = horses_and_donkeys.id
          LEFT JOIN pet_commands ON dogs.id = pet_commands.id
          LEFT JOIN pet_knows_commands ON dogs.id = pet_knows_commands.id
          LEFT JOIN young_animals ON dogs.id = young_animals.id
WHERE hamsters.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM cats LEFT JOIN hamsters ON cats.id = hamsters.id
          LEFT JOIN dogs ON cats.id = dogs.id
          LEFT JOIN donkeys ON cats.id = donkeys.id
          LEFT JOIN horses ON cats.id = horses.id
          LEFT JOIN animal_type ON cats.id = animal_type.id
          LEFT JOIN horses_and_donkeys ON cats.id = horses_and_donkeys.id
          LEFT JOIN pet_commands ON cats.id = pet_commands.id
          LEFT JOIN pet_knows_commands ON cats.id = pet_knows_commands.id
          LEFT JOIN young_animals ON cats.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM donkeys LEFT JOIN hamsters ON donkeys.id = hamsters.id
             LEFT JOIN dogs ON donkeys.id = dogs.id
             LEFT JOIN cats ON donkeys.id = cats.id
             LEFT JOIN horses ON donkeys.id = horses.id
             LEFT JOIN animal_type ON donkeys.id = animal_type.id
             LEFT JOIN horses_and_donkeys ON donkeys.id = horses_and_donkeys.id
             LEFT JOIN pet_commands ON donkeys.id = pet_commands.id
             LEFT JOIN pet_knows_commands ON donkeys.id = pet_knows_commands.id
             LEFT JOIN young_animals ON donkeys.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM horses LEFT JOIN hamsters ON horses.id = hamsters.id
            LEFT JOIN dogs ON horses.id = dogs.id
            LEFT JOIN cats ON horses.id = cats.id
            LEFT JOIN donkeys ON horses.id = donkeys.id
            LEFT JOIN animal_type ON horses.id = animal_type.id
            LEFT JOIN horses_and_donkeys ON horses.id = horses_and_donkeys.id
            LEFT JOIN pet_commands ON horses.id = pet_commands.id
            LEFT JOIN pet_knows_commands ON horses.id = pet_knows_commands.id
            LEFT JOIN young_animals ON horses.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM animal_type LEFT JOIN hamsters ON animal_type.id = hamsters.id
                 LEFT JOIN dogs ON animal_type.id = dogs.id
                 LEFT JOIN cats ON animal_type.id = cats.id
                 LEFT JOIN donkeys ON animal_type.id = donkeys.id
                 LEFT JOIN horses ON animal_type.id = horses.id
                 LEFT JOIN horses_and_donkeys ON animal_type.id = horses_and_donkeys.id
                 LEFT JOIN pet_commands ON animal_type.id = pet_commands.id
                 LEFT JOIN pet_knows_commands ON animal_type.id = pet_knows_commands.id
                 LEFT JOIN young_animals ON animal_type.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL AND horses.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM horses_and_donkeys LEFT JOIN hamsters ON horses_and_donkeys.id = hamsters.id
                        LEFT JOIN dogs ON horses_and_donkeys.id = dogs.id
                        LEFT JOIN cats ON horses_and_donkeys.id = cats.id
                        LEFT JOIN donkeys ON horses_and_donkeys.id = donkeys.id
                        LEFT JOIN horses ON horses_and_donkeys.id = horses.id
                        LEFT JOIN animal_type ON horses_and_donkeys.id = animal_type.id
                        LEFT JOIN pet_commands ON horses_and_donkeys.id = pet_commands.id
                        LEFT JOIN pet_knows_commands ON horses_and_donkeys.id = pet_knows_commands.id
                        LEFT JOIN young_animals ON horses_and_donkeys.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL AND horses.id IS NULL AND animal_type.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM pet_commands LEFT JOIN hamsters ON pet_commands.id = hamsters.id
                  LEFT JOIN dogs ON pet_commands.id = dogs.id
                  LEFT JOIN cats ON pet_commands.id = cats.id
                  LEFT JOIN donkeys ON pet_commands.id = donkeys.id
                  LEFT JOIN horses ON pet_commands.id = horses.id
                  LEFT JOIN horses_and_donkeys ON pet_commands.id = horses_and_donkeys.id
                  LEFT JOIN animal_type ON pet_commands.id = animal_type.id
                  LEFT JOIN pet_knows_commands ON pet_commands.id = pet_knows_commands.id
                  LEFT JOIN young_animals ON pet_commands.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL AND horses.id IS NULL AND animal_type.id IS NULL AND horses_and_donkeys.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM pet_knows_commands LEFT JOIN hamsters ON pet_knows_commands.id = hamsters.id
                        LEFT JOIN dogs ON pet_knows_commands.id = dogs.id
                        LEFT JOIN cats ON pet_knows_commands.id = cats.id
                        LEFT JOIN donkeys ON pet_knows_commands.id = donkeys.id
                        LEFT JOIN horses ON pet_knows_commands.id = horses.id
                        LEFT JOIN horses_and_donkeys ON pet_knows_commands.id = horses_and_donkeys.id
                        LEFT JOIN pet_commands ON pet_knows_commands.id = pet_commands.id
                        LEFT JOIN animal_type ON pet_knows_commands.id = animal_type.id
                        LEFT JOIN young_animals ON pet_knows_commands.id = young_animals.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL AND horses.id IS NULL AND animal_type.id IS NULL AND horses_and_donkeys.id IS NULL AND pet_commands.id IS NULL
UNION ALL
SELECT hamsters.id AS id_from_hamsters, hamsters.id_animal_type AS id_animal_type_from_hamsters, hamsters.date_of_birth AS date_of_birth_from_hamsters, hamsters.name AS name_from_hamsters,
dogs.id AS id_from_from_dogs, dogs.id_animal_type AS id_animal_type_from_dogs, dogs.date_of_birth AS date_of_birth_from_dogs, dogs.name AS name_from_dogs,
cats.id AS id_from_cats, cats.id_animal_type AS id_animal_type_from_cats, cats.date_of_birth AS date_of_birth_from_cats, cats.name AS name_from_cats,
donkeys.id AS id_from_donkeys, donkeys.id_animal_type AS id_animal_type_from_donkeys, donkeys.date_of_birth AS date_of_birth_from_donkeys, donkeys.name AS name_from_donkeys,
horses.id AS id_from_horses, horses.id_animal_type AS id_animal_type_from_horses, horses.date_of_birth AS date_of_birth_from_horses, horses.name AS name_from_horses,
animal_type.id AS id_from_animal_type, animal_type.type AS type_from_animal_type,
horses_and_donkeys.id AS id_from_horses_and_donkeys, horses_and_donkeys.id_animal_type AS id_animal_type_from_horses_and_donkeys, horses_and_donkeys.date_of_birth AS date_of_birth_from_horses_and_donkeys, horses_and_donkeys.name AS name_from_horses_and_donkeys,
pet_commands.id AS id_from_pet_commands, pet_commands.command AS command_from_pet_commands,
pet_knows_commands.id AS id_from_pet_knows_commands, pet_knows_commands.id_pet AS id_from_pet_pet_knows_commands, pet_knows_commands.id_commands AS id_commands_from_pet_knows_commands,
young_animals.id AS id_animal_type_from_young_animals, young_animals.id_animal_type AS id_animal_type_from_young_animals, young_animals.date_of_birth AS date_of_birth_from_young_animals, young_animals.name AS name_from_young_animals, young_animals.age AS age_from_young_animals
FROM young_animals LEFT JOIN hamsters ON young_animals.id = hamsters.id
                   LEFT JOIN dogs ON young_animals.id = dogs.id
                   LEFT JOIN cats ON young_animals.id = cats.id
                   LEFT JOIN donkeys ON young_animals.id = donkeys.id
                   LEFT JOIN horses ON young_animals.id = horses.id
                   LEFT JOIN horses_and_donkeys ON young_animals.id = horses_and_donkeys.id
                   LEFT JOIN animal_type ON young_animals.id = animal_type.id
                   LEFT JOIN pet_commands ON young_animals.id = pet_commands.id
                   LEFT JOIN pet_knows_commands ON young_animals.id = pet_knows_commands.id
WHERE hamsters.id IS NULL AND dogs.id IS NULL AND cats.id IS NULL AND donkeys.id IS NULL AND horses.id IS NULL AND animal_type.id IS NULL AND horses_and_donkeys.id IS NULL AND pet_commands.id IS NULL AND pet_knows_commands.id IS NULL;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;










/*
DROP TABLE IF EXISTS `friends_of_man`.`all_animal` ;
CREATE TABLE IF NOT EXISTS `friends_of_man`.`all_animal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_hamsters` INT NULL,
  `id_animal_type_hamsters` INT NULL,
  `date_of_birth_hamsters` DATETIME NULL,
  `name_hamsters` VARCHAR(45) NULL,
  `id_dogs` INT NULL,
  `id_animal_type_dogs` INT NULL,
  `date_of_birth_dogs` DATETIME NULL,
  `name_dogs` VARCHAR(45) NULL,
  `id_cats` INT NULL,
  `id_animal_type_cats` INT NULL,
  `date_of_birth_cats` DATETIME NULL,
  `name_cats` VARCHAR(45) NULL,
  `id_donkeys` INT NULL,
  `id_animal_type_donkeys` INT NULL,
  `date_of_birth_donkeys` DATETIME NULL,
  `name_donkeys` VARCHAR(45) NULL,
  `id_horses` INT NULL,
  `id_animal_type_horses` INT NULL,
  `date_of_birth_horses` DATETIME NULL,
  `name_horses` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `all_animal_hamsters_fk0_idx` (`id_hamsters` ASC) VISIBLE,
  INDEX `all_animal_hamsters_fk1_idx` (`id_animal_type_hamsters` ASC) VISIBLE,
  INDEX `all_animal_dog_fk0_idx` (`id_dogs` ASC) VISIBLE,
  INDEX `all_animal_dogs_fk1_idx` (`id_animal_type_dogs` ASC) VISIBLE,
  INDEX `all_animal_cats_fk0_idx` (`id_cats` ASC) VISIBLE,
  INDEX `all_animal_cats_fk1_idx` (`id_animal_type_cats` ASC) VISIBLE,
  INDEX `all_animal_donkeys_fk0_idx` (`id_donkeys` ASC) VISIBLE,
  INDEX `all_animal_donkeys_fk1_idx` (`id_animal_type_donkeys` ASC) VISIBLE,
  INDEX `all_animal_horses_fk11_idx` (`id_animal_type_horses` ASC) VISIBLE,
  INDEX `all_animal_horses_fk1_idx` (`id_horses` ASC) VISIBLE,
  CONSTRAINT `all_animal_hamsters_fk0`
    FOREIGN KEY (`id_hamsters`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_hamsters_fk1`
    FOREIGN KEY (`id_animal_type_hamsters`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_dogs_fk0`
    FOREIGN KEY (`id_dogs`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_dogs_fk1`
    FOREIGN KEY (`id_animal_type_dogs`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_cats_fk0`
    FOREIGN KEY (`id_cats`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_cats_fk1`
    FOREIGN KEY (`id_animal_type_cats`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_donkeys_fk0`
    FOREIGN KEY (`id_donkeys`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_donkeys_fk1`
    FOREIGN KEY (`id_animal_type_donkeys`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_horses_fk0`
    FOREIGN KEY (`id_horses`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_horses_fk1`
    FOREIGN KEY (`id_animal_type_horses`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;




DROP TABLE IF EXISTS `friends_of_man`.`all_animal` ;
CREATE TABLE IF NOT EXISTS `friends_of_man`.`all_animal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_hamsters` INT NULL,
  `id_animal_type_hamsters` INT NULL,
  `date_of_birth_hamsters` DATETIME NULL,
  `name_hamsters` VARCHAR(45) NULL,
  `id_dogs` INT NULL,
  `id_animal_type_dogs` INT NULL,
  `date_of_birth_dogs` DATETIME NULL,
  `name_dogs` VARCHAR(45) NULL,
  `id_cats` INT NULL,
  `id_animal_type_cats` INT NULL,
  `date_of_birth_cats` DATETIME NULL,
  `name_cats` VARCHAR(45) NULL,
  `id_donkeys` INT NULL,
  `id_animal_type_donkeys` INT NULL,
  `date_of_birth_donkeys` DATETIME NULL,
  `name_donkeys` VARCHAR(45) NULL,
  `id_horses` INT NULL,
  `id_animal_type_horses` INT NULL,
  `date_of_birth_horses` DATETIME NULL,
  `name_horses` VARCHAR(45) NULL,
  `id_animal_type` INT NULL,
  `type_animal_type` VARCHAR(20),
  `id_horses_and_donkeys` INT NULL,
  `id_animal_type_horses_and_donkeys` INT NULL,
  `date_of_birth_horses_and_donkeys` DATETIME NULL,
  `name_horses_and_donkeys` VARCHAR(45) NULL,
  `id_pet_commands` INT NULL,
  `command_pet_commands` VARCHAR(20) NOT NULL,
  `id_pet_knows_commands` INT NULL,
  `id_pet_pet_knows_commands` INT NULL,
  `id_commands_pet_knows_commands` INT NULL,
  `id_animal_type_young_animals` INT NULL,
  `date_of_birth_young_animals` DATETIME NULL,
  `name_young_animals` VARCHAR(45) NULL,
  `age_young_animals` INT NULL
  PRIMARY KEY (`id`),
  INDEX `all_animal_hamsters_fk0_idx` (`id_hamsters` ASC) VISIBLE,
  INDEX `all_animal_hamsters_fk1_idx` (`id_animal_type_hamsters` ASC) VISIBLE,
  INDEX `all_animal_dog_fk0_idx` (`id_dogs` ASC) VISIBLE,
  INDEX `all_animal_dogs_fk1_idx` (`id_animal_type_dogs` ASC) VISIBLE,
  INDEX `all_animal_cats_fk0_idx` (`id_cats` ASC) VISIBLE,
  INDEX `all_animal_cats_fk1_idx` (`id_animal_type_cats` ASC) VISIBLE,
  INDEX `all_animal_donkeys_fk0_idx` (`id_donkeys` ASC) VISIBLE,
  INDEX `all_animal_donkeys_fk1_idx` (`id_animal_type_donkeys` ASC) VISIBLE,
  INDEX `all_animal_horses_fk0_idx` (`id_horses` ASC) VISIBLE,
  INDEX `all_animal_horses_fk1_idx` (`id_animal_type_horses` ASC) VISIBLE,
  CONSTRAINT `all_animal_hamsters_fk0`
    FOREIGN KEY (`id_hamsters`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_hamsters_fk1`
    FOREIGN KEY (`id_animal_type_hamsters`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_dogs_fk0`
    FOREIGN KEY (`id_dogs`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_dogs_fk1`
    FOREIGN KEY (`id_animal_type_dogs`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_cats_fk0`
    FOREIGN KEY (`id_cats`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_cats_fk1`
    FOREIGN KEY (`id_animal_type_cats`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_donkeys_fk0`
    FOREIGN KEY (`id_donkeys`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_donkeys_fk1`
    FOREIGN KEY (`id_animal_type_donkeys`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_horses_fk0`
    FOREIGN KEY (`id_horses`)
    REFERENCES `mydb`.`pet_knows_commands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `all_animal_horses_fk1`
    FOREIGN KEY (`id_animal_type_horses`)
    REFERENCES `mydb`.`animal_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
*/